{"version":3,"file":"subject_add.js","names":[],"mappings":"","sources":["subject_add.js"],"sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({\"./src/scripts/page/subject_add.js\":[function(require,module,exports){\nvar $ = require(\"../lib/jquery.js\");\nvar Uploader = require(\"../lib/iupload.js\");\nvar http = require(\"../mod/http.js\");\nrequire(\"../lib/iform.js\");\nvar url_params = require(\"../lib/search_params.js\").params;\n$(function(){\n    $(\"#operation-nav\").addClass(\"active\");\n    $(\"#op-add-subject\").addClass(\"active\");\n\n    initUpload();\n    addSubject();\n    var subject_id = url_params.subject_id;\n    if (subject_id !== void 0) {\n        $(\"button.add-subject\").html(\"更新专题\").after($('<a href=\"/m/operation/subject_item_edit?subject_id='+subject_id+'\" class=\"btn btn-info\" >专题详情</a>'));\n\n        http.get({\n            url : \"/api/getAlbum.htm\",\n            data : {\n                id : subject_id\n            }\n        }).done(function(rs){\n           var data = rs.album;\n           if (data) {\n               $(\"#subject_name\").val(data.name);\n                $(\"#subject_logo\").val(data.imageUrl);\n                $(\"#upload-img\").removeClass(\"hide\").find(\"img\").attr(\"src\", data.imageUrl) \n                $(\"#upload-img h4\").html(\"专题头图\");\n                if (data.detailImageUrl) {\n                    $(\"#detail-subject_logo\").val(data.detailImageUrl);\n                    $(\"#detail-upload-img\").removeClass(\"hide\").find(\"img\").attr(\"src\", data.detailImageUrl); \n                    $(\"#detail-upload-img h4\").html(\"详情页头图\");\n                }\n               return;\n           }\n            alert(\"获取专题基本信息失败\");\n        }).fail(function(){\n            alert(\"获取专题基本信息失败\");\n        })\n\n    }\n       \n});\n\nfunction addSubject(){\n    var $form = $(\"#subject_form\");\n    $form.form({\n        data_map : {\n            name : \"#subject_name\",\n            imageUrl : \"#subject_logo\",\n            detailImageUrl : \"#detail-subject_logo\",\n            startDate : \"#start_date\",\n            endDate : \"#end_date\"\n        }\n    });\n    $form.on(\"form-submit\",function(e,form_data){\n        e.preventDefault();\n        if (!(form_data.name && form_data.imageUrl)) {\n            alert(\"没有填写完数据\");\n            return;\n        }\n        http.post({\n            url : \"/api/addAlbum.htm\",\n            data : form_data,\n            async : false\n\n        }).done(function(rs){\n            if (rs.ret == 1) {\n                var album = rs.album;\n                window.location.href=\"/m/operation/subject_item_edit?subject_id=\"+ album.id;\n            } else {\n                alert(\"添加失败\");\n            }\n        }).fail(function(){\n            alert(\"添加失败\");\n        });\n    })\n}\n\nfunction initUpload(){\n    Uploader.create_upload({\n        dom : $(\"#logo-upload\")[0],\n        multi_selection : false,\n        callback : function(data){\n            var pathList = data.pathList;\n            if (pathList && pathList.length) {\n                $(\"#subject_logo\").val(pathList[0]);\n                $(\"#upload-img\").removeClass(\"hide\").find(\"img\").attr(\"src\", pathList[0]) \n                $(\"#upload-img h4\").html(\"专题头图\");\n            }\n        }\n    });\n    Uploader.create_upload({\n        dom : $(\"#detail-logo-upload\")[0],\n        multi_selection : false,\n        callback : function(data){\n            var pathList = data.pathList;\n            if (pathList && pathList.length) {\n                $(\"#detail-subject_logo\").val(pathList[0]);\n                $(\"#detail-upload-img\").removeClass(\"hide\").find(\"img\").attr(\"src\", pathList[0]) \n                $(\"#detail-upload-img h4\").html(\"详情页头图\");\n            }\n        }\n    });\n\n}\n\n},{\"../lib/iform.js\":\"/Users/wk/myspace/git/kvv/amily_ms_web/src/scripts/lib/iform.js\",\"../lib/iupload.js\":\"/Users/wk/myspace/git/kvv/amily_ms_web/src/scripts/lib/iupload.js\",\"../lib/jquery.js\":\"/Users/wk/myspace/git/kvv/amily_ms_web/src/scripts/lib/jquery.js\",\"../lib/search_params.js\":\"/Users/wk/myspace/git/kvv/amily_ms_web/src/scripts/lib/search_params.js\",\"../mod/http.js\":\"/Users/wk/myspace/git/kvv/amily_ms_web/src/scripts/mod/http.js\"}],\"/Users/wk/myspace/git/kvv/amily_ms_web/src/scripts/lib/cookies.js\":[function(require,module,exports){\nvar docCookie = (function(undefined) {\n  /*\\\n  |*|\n  |*|  :: cookies.js ::\n  |*|\n  |*|  A complete cookies reader/writer framework with full unicode support.\n  |*|\n  |*|  https://developer.mozilla.org/en-US/docs/DOM/document.cookie\n  |*|\n  |*|  This framework is released under the GNU Public License, version 3 or later.\n  |*|  http://www.gnu.org/licenses/gpl-3.0-standalone.html\n  |*|\n  |*|  Syntaxes:\n  |*|\n  |*|  * docCookies.setItem(name, value[, end[, path[, domain[, secure]]]])\n  |*|  * docCookies.getItem(name)\n  |*|  * docCookies.removeItem(name[, path], domain)\n  |*|  * docCookies.hasItem(name)\n  |*|  * docCookies.keys()\n  |*|\n  \\*/\n\n  var docCookies = {\n    getItem: function (sKey) {\n      return decodeURIComponent(document.cookie.replace(new RegExp(\"(?:(?:^|.*;)\\\\s*\" + encodeURIComponent(sKey).replace(/[\\-\\.\\+\\*]/g, \"\\\\$&\") + \"\\\\s*\\\\=\\\\s*([^;]*).*$)|^.*$\"), \"$1\")) || null;\n    },\n    setItem: function (sKey, sValue, vEnd, sPath, sDomain, bSecure) {\n      if (!sKey || /^(?:expires|max\\-age|path|domain|secure)$/i.test(sKey)) { return false; }\n      var sExpires = \"\";\n      if (vEnd) {\n        switch (vEnd.constructor) {\n          case Number:\n            sExpires = vEnd === Infinity ? \"; expires=Fri, 31 Dec 9999 23:59:59 GMT\" : \"; max-age=\" + vEnd;\n            break;\n          case String:\n            sExpires = \"; expires=\" + vEnd;\n            break;\n          case Date:\n            sExpires = \"; expires=\" + vEnd.toUTCString();\n            break;\n        }\n      }\n      document.cookie = encodeURIComponent(sKey) + \"=\" + encodeURIComponent(sValue) + sExpires + (sDomain ? \"; domain=\" + sDomain : \"\") + (sPath ? \"; path=\" + sPath : \"\") + (bSecure ? \"; secure\" : \"\");\n      return true;\n    },\n\n\n    removeItem: function (sKey, sPath, sDomain) {\n      if (!sKey || !this.hasItem(sKey)) { return false; }\n      document.cookie = encodeURIComponent(sKey) + \"=; expires=Thu, 01 Jan 1970 00:00:00 GMT\" + ( sDomain ? \"; domain=\" + sDomain : \"\") + ( sPath ? \"; path=\" + sPath : \"\");\n      return true;\n    },\n    hasItem: function (sKey) {\n      return (new RegExp(\"(?:^|;\\\\s*)\" + encodeURIComponent(sKey).replace(/[\\-\\.\\+\\*]/g, \"\\\\$&\") + \"\\\\s*\\\\=\")).test(document.cookie);\n    },\n    keys: /* optional method: you can safely remove it! */ function () {\n      var aKeys = document.cookie.replace(/((?:^|\\s*;)[^\\=]+)(?=;|$)|^\\s*|\\s*(?:\\=[^;]*)?(?:\\1|$)/g, \"\").split(/\\s*(?:\\=[^;]*)?;\\s*/);\n      for (var nIdx = 0; nIdx < aKeys.length; nIdx++) { aKeys[nIdx] = decodeURIComponent(aKeys[nIdx]); }\n      return aKeys;\n    }\n  };\n  return docCookies;\n})();\nmodule.exports =  docCookie;\n\n\n},{}],\"/Users/wk/myspace/git/kvv/amily_ms_web/src/scripts/lib/icheckbox.js\":[function(require,module,exports){\nvar $ = require('./jquery');\n\nvar Checkbox = function(dom){\n    this._$dom = dom;\n    this._$checkbox = dom.find(\"input[type=checkbox]\");\n    this.init();\n}\n\nCheckbox.prototype.init = function(){\n    var checked = this._$checkbox.attr(\"checked\");\n    if (checked) {\n        this._$dom.addClass(\"checked\");\n    } else {\n        this._$dom.removeClass(\"checked\");\n    }\n    this._listen_dom_event();\n}\nCheckbox.prototype._listen_dom_event = function(){\n    var me = this , checkbox = this._$checkbox;\n    this._$dom.click(function(e){\n        if (checkbox.attr(\"checked\")) {\n            me.uncheck();\n        } else {\n            me.check();\n        }\n    });\n}\n\nCheckbox.prototype.uncheck = function(){\n    this._$checkbox.removeAttr(\"checked\");\n    this._$dom.removeClass(\"checked\");\n}\n\nCheckbox.prototype.check = function(){\n    this._$checkbox.attr(\"checked\",true);\n    this._$dom.addClass(\"checked\");\n}\n\n$.fn.checkbox = function(){\n    this.each(function(){\n        var $this = $(this),\n            data = $this.data(\"icheckbox\");\n        \n        if (!data) {\n            $this.data(\"icheckbox\",(data = new Checkbox($this)));    \n        }\n    });\n}\n\n},{\"./jquery\":\"/Users/wk/myspace/git/kvv/amily_ms_web/src/scripts/lib/jquery.js\"}],\"/Users/wk/myspace/git/kvv/amily_ms_web/src/scripts/lib/iform.js\":[function(require,module,exports){\nvar $ = require('./jquery');\nrequire('./jvalidator/src/index.js');\nrequire(\"./icheckbox\");\nrequire(\"./y-selector\");\nrequire(\"./jquery.placeholder.js\");\nvar undef;\nvar create_tip = function(){\n    var html = '<div class=\"m-tip m-up-tip m-alert-tip hide\">\\\n            <div class=\"m-tip-trg\">\\\n                <div class=\"trg-out\"></div>\\\n                <div class=\"trg-in\"></div>\\\n            </div>\\\n            <div class=\"m-tip-content\">\\\n                <p></p>\\\n            </div>\\\n        </div>';\n    var dom = $(html);\n    return dom; \n}\n\nvar Form = function(opt){\n    this._$form = opt.dom;\n    this._data_map = opt.data_map;    \n    this._jv_suc = opt.jv_suc;\n    this._jv_err = opt.jv_err;\n    this._cus_jv = opt.jv_custom || $.noop;\n    this.init();\n}\n\nForm.prototype.init = function(){\n    var me = this ,\n        jv = this._$form.jvalidator();\n    this._jv = jv;\n    jv.when([\"blur\"]);\n    jv.success(me._jv_suc || function(){\n        var $d = $(this.element);\n        if ($d.data(\"show-error\")) {\n            var err_dom = $d.data('error-dom');\n            err_dom && err_dom.hide();\n        }\n        $(this.element).removeClass(\"error\");\n    });\n\n    jv.fail(function( $event , errors ){\n        var $d = $(this.element);\n        var msg = \"\";\n        for(var i=0,l=errors.length ;i < l;i++){\n            if (!errors[i].result) {\n                msg = errors[i].getMessage();\n                break;\n            }\n        }\n        me.show_error($d,msg);\n    }); \n\n    this._cus_jv(jv);\n    this._$form.find(\"select\").yselector();\n    this._$form.find(\"div[data-checkbox]\").checkbox();\n    this._$form.find(\"input[placeholder],textarea[placeholder]\").placeholder();\n    this._listen_dom_event();\n}\n\nForm.prototype.show_error = function($d,msg){\n    var t;\n    if (t = $d.data(\"show-error\")) {\n        var err_dom = $d.data(\"error-dom\");\n        if (!err_dom) {\n            $d.data(\"error-dom\",(err_dom = create_tip()));\n            var $p = $d.parent();\n            var $w = $p.width();\n            err_dom.width($w);\n            $p.append(err_dom);\n        }\n        err_dom.find(\"p\").text(msg);\n        err_dom.show();\n    }\n    $d.addClass(\"error\");\n\n}\n\nForm.prototype._listen_dom_event = function(){\n    var me = this;\n    this._$form.on(\"submit\",function(e){\n        e.preventDefault();\n        me.submit();\n    })\n}\n\nForm.prototype._prase_form_val = function(){\n    var data_map = this._data_map,\n        $form = this._$form;\n    var data = {};\n    for(var key in data_map ){\n        var obj = data_map[key];\n        if($.type(obj) === \"string\"){\n           data[key] = $form.find(obj).val() || undef;\n        } else if ($.type(obj) === \"object\") {\n           data[key] = obj.val($form.find(obj.cls));\n        }\n    }\n    return data;\n}\nForm.prototype.submit = function(args_obj){\n     var me = this;\n     me._jv.validateAll(function( result , elements ){\n        if( result ) {\n            var data = me._prase_form_val();\n            me._$form.trigger(\"form-submit\",[data,args_obj]);\n        } \n    });\n\n}\n\n$.fn.form = function(opt){\n    opt = opt || {};\n    this.each(function () {\n        var $this = $(this),\n            data = $this.data(\"iform\");\n\n        if (!data) {\n            var _opt = $.extend({\n                dom : $this\n            },opt);\n            $this.data(\"iform\",(data = (new Form(_opt))));\n        }\n    });   \n}\n\n\n\n\n},{\"./icheckbox\":\"/Users/wk/myspace/git/kvv/amily_ms_web/src/scripts/lib/icheckbox.js\",\"./jquery\":\"/Users/wk/myspace/git/kvv/amily_ms_web/src/scripts/lib/jquery.js\",\"./jquery.placeholder.js\":\"/Users/wk/myspace/git/kvv/amily_ms_web/src/scripts/lib/jquery.placeholder.js\",\"./jvalidator/src/index.js\":\"/Users/wk/myspace/git/kvv/amily_ms_web/src/scripts/lib/jvalidator/src/index.js\",\"./y-selector\":\"/Users/wk/myspace/git/kvv/amily_ms_web/src/scripts/lib/y-selector.js\"}],\"/Users/wk/myspace/git/kvv/amily_ms_web/src/scripts/lib/iupload.js\":[function(require,module,exports){\n\nfunction create_upload(opt){\n    var exts = opt.extensions || [\"jpg\",\"png\",\"jpeg\"];\n    var exts_str = exts.join(\",\");\n    var uploader = new plupload.Uploader({\n        runtimes : 'html5,flash,html4',\n         \n        browse_button : opt.dom, // you can pass in id...\n        //container: opt.container, // ... or DOM Element itself\n         \n        url : opt.url || \"/api/upload\",\n        \n        filters : {\n            max_file_size : opt.size || '10mb',\n            prevent_duplicates: true,\n            mime_types: [\n                {title : \"选择(\"+exts_str+\")格式的文件\", extensions : exts_str }\n            ]\n        },\n     \n        // Flash settings\n        flash_swf_url : '/upload/Moxie.swf',\n        multi_selection : opt.multi_selection == void 0 ? true : opt.multi_selection,\n     \n        init: {\n            PostInit: function() {\n     \n                /**\n                document.getElementById('uploadfiles').onclick = function() {\n                    uploader.start();\n                    return false;\n                };\n                **/\n            },\n     \n            FilesAdded: function(up, files) {\n                //plupload.each(files, function(file) {\n                //    console.log(\"file\",file.id);\n                //});\n                if (opt.check ){\n                    if( opt.check(files,up)) {\n                        uploader.start();\n                        opt.start && opt.start(up,files);\n                    }\n                } else {\n                    uploader.start();\n                    opt.start && opt.start(up,files); \n                }\n            },\n     \n            UploadProgress: function(up, file) {\n                //console.log(\"progress===\",file.percent);\n               // document.getElementById(file.id).getElementsByTagName('b')[0].innerHTML = '<span>' + file.percent + \"%</span>\";\n            },\n     \n            Error: function(up, err) {\n                console.log(\"err===\",err.code,err.message);\n                //document.getElementById('console').innerHTML += \"\\nError #\" + err.code + \": \" + err.message;\n                \n            },\n            UploadFile : function(up,flie){\n            },\n            FileUploaded : function(up,files,res){\n                var _status = res.status;\n                if (_status == 200) {\n                    var txt = res.response;\n                    var data = eval(\"(\"+txt+\")\");\n                    opt.callback && opt.callback(data,files);\n                }\n                //console.log(\"this  ====\",arguments);\n            }\n        }\n    });\n     \n    uploader.init();\n\n    return uploader;\n}\n\n\nmodule.exports = {\n    create_upload : create_upload\n}\n\n\n},{}],\"/Users/wk/myspace/git/kvv/amily_ms_web/src/scripts/lib/jquery.js\":[function(require,module,exports){\nvar $ = window.jQuery;\nmodule.exports = $;\n\n},{}],\"/Users/wk/myspace/git/kvv/amily_ms_web/src/scripts/lib/jquery.placeholder.js\":[function(require,module,exports){\n/*! http://mths.be/placeholder v2.0.8 by @mathias */\n;(function(window, document, $) {\n\n\t// Opera Mini v7 doesn’t support placeholder although its DOM seems to indicate so\n\tvar isOperaMini = Object.prototype.toString.call(window.operamini) == '[object OperaMini]';\n\tvar isInputSupported = 'placeholder' in document.createElement('input') && !isOperaMini;\n\tvar isTextareaSupported = 'placeholder' in document.createElement('textarea') && !isOperaMini;\n\tvar prototype = $.fn;\n\tvar valHooks = $.valHooks;\n\tvar propHooks = $.propHooks;\n\tvar hooks;\n\tvar placeholder;\n\n\tif (isInputSupported && isTextareaSupported) {\n\n\t\tplaceholder = prototype.placeholder = function() {\n\t\t\treturn this;\n\t\t};\n\n\t\tplaceholder.input = placeholder.textarea = true;\n\n\t} else {\n\n\t\tplaceholder = prototype.placeholder = function() {\n\t\t\tvar $this = this;\n\t\t\t$this\n\t\t\t\t.filter((isInputSupported ? 'textarea' : ':input') + '[placeholder]')\n\t\t\t\t.not('.placeholder')\n\t\t\t\t.bind({\n\t\t\t\t\t'focus.placeholder': clearPlaceholder,\n\t\t\t\t\t'blur.placeholder': setPlaceholder\n\t\t\t\t})\n\t\t\t\t.data('placeholder-enabled', true)\n\t\t\t\t.trigger('blur.placeholder');\n\t\t\treturn $this;\n\t\t};\n\n\t\tplaceholder.input = isInputSupported;\n\t\tplaceholder.textarea = isTextareaSupported;\n\n\t\thooks = {\n\t\t\t'get': function(element) {\n\t\t\t\tvar $element = $(element);\n\n\t\t\t\tvar $passwordInput = $element.data('placeholder-password');\n\t\t\t\tif ($passwordInput) {\n\t\t\t\t\treturn $passwordInput[0].value;\n\t\t\t\t}\n\n\t\t\t\treturn $element.data('placeholder-enabled') && $element.hasClass('placeholder') ? '' : element.value;\n\t\t\t},\n\t\t\t'set': function(element, value) {\n\t\t\t\tvar $element = $(element);\n\n\t\t\t\tvar $passwordInput = $element.data('placeholder-password');\n\t\t\t\tif ($passwordInput) {\n\t\t\t\t\treturn $passwordInput[0].value = value;\n\t\t\t\t}\n\n\t\t\t\tif (!$element.data('placeholder-enabled')) {\n\t\t\t\t\treturn element.value = value;\n\t\t\t\t}\n\t\t\t\tif (value == '') {\n\t\t\t\t\telement.value = value;\n\t\t\t\t\t// Issue #56: Setting the placeholder causes problems if the element continues to have focus.\n\t\t\t\t\tif (element != safeActiveElement()) {\n\t\t\t\t\t\t// We can't use `triggerHandler` here because of dummy text/password inputs :(\n\t\t\t\t\t\tsetPlaceholder.call(element);\n\t\t\t\t\t}\n\t\t\t\t} else if ($element.hasClass('placeholder')) {\n\t\t\t\t\tclearPlaceholder.call(element, true, value) || (element.value = value);\n\t\t\t\t} else {\n\t\t\t\t\telement.value = value;\n\t\t\t\t}\n\t\t\t\t// `set` can not return `undefined`; see http://jsapi.info/jquery/1.7.1/val#L2363\n\t\t\t\treturn $element;\n\t\t\t}\n\t\t};\n\n\t\tif (!isInputSupported) {\n\t\t\tvalHooks.input = hooks;\n\t\t\tpropHooks.value = hooks;\n\t\t}\n\t\tif (!isTextareaSupported) {\n\t\t\tvalHooks.textarea = hooks;\n\t\t\tpropHooks.value = hooks;\n\t\t}\n\n\t\t$(function() {\n\t\t\t// Look for forms\n\t\t\t$(document).delegate('form', 'submit.placeholder', function() {\n\t\t\t\t// Clear the placeholder values so they don't get submitted\n\t\t\t\tvar $inputs = $('.placeholder', this).each(clearPlaceholder);\n\t\t\t\tsetTimeout(function() {\n\t\t\t\t\t$inputs.each(setPlaceholder);\n\t\t\t\t}, 10);\n\t\t\t});\n\t\t});\n\n\t\t// Clear placeholder values upon page reload\n\t\t$(window).bind('beforeunload.placeholder', function() {\n\t\t\t$('.placeholder').each(function() {\n\t\t\t\tthis.value = '';\n\t\t\t});\n\t\t});\n\n\t}\n\n\tfunction args(elem) {\n\t\t// Return an object of element attributes\n\t\tvar newAttrs = {};\n\t\tvar rinlinejQuery = /^jQuery\\d+$/;\n\t\t$.each(elem.attributes, function(i, attr) {\n\t\t\tif (attr.specified && !rinlinejQuery.test(attr.name)) {\n\t\t\t\tnewAttrs[attr.name] = attr.value;\n\t\t\t}\n\t\t});\n\t\treturn newAttrs;\n\t}\n\n\tfunction clearPlaceholder(event, value) {\n\t\tvar input = this;\n\t\tvar $input = $(input);\n\t\tif (input.value == $input.attr('placeholder') && $input.hasClass('placeholder')) {\n\t\t\tif ($input.data('placeholder-password')) {\n\t\t\t\t$input = $input.hide().next().show().attr('id', $input.removeAttr('id').data('placeholder-id'));\n\t\t\t\t// If `clearPlaceholder` was called from `$.valHooks.input.set`\n\t\t\t\tif (event === true) {\n\t\t\t\t\treturn $input[0].value = value;\n\t\t\t\t}\n\t\t\t\t$input.focus();\n\t\t\t} else {\n\t\t\t\tinput.value = '';\n\t\t\t\t$input.removeClass('placeholder');\n\t\t\t\tinput == safeActiveElement() && input.select();\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction setPlaceholder() {\n\t\tvar $replacement;\n\t\tvar input = this;\n\t\tvar $input = $(input);\n\t\tvar id = this.id;\n\t\tif (input.value == '') {\n\t\t\tif (input.type == 'password') {\n\t\t\t\tif (!$input.data('placeholder-textinput')) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\t$replacement = $input.clone().attr({ 'type': 'text' });\n\t\t\t\t\t} catch(e) {\n\t\t\t\t\t\t$replacement = $('<input>').attr($.extend(args(this), { 'type': 'text' }));\n\t\t\t\t\t}\n\t\t\t\t\t$replacement\n\t\t\t\t\t\t.removeAttr('name')\n\t\t\t\t\t\t.data({\n\t\t\t\t\t\t\t'placeholder-password': $input,\n\t\t\t\t\t\t\t'placeholder-id': id\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.bind('focus.placeholder', clearPlaceholder);\n\t\t\t\t\t$input\n\t\t\t\t\t\t.data({\n\t\t\t\t\t\t\t'placeholder-textinput': $replacement,\n\t\t\t\t\t\t\t'placeholder-id': id\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.before($replacement);\n\t\t\t\t}\n\t\t\t\t$input = $input.removeAttr('id').hide().prev().attr('id', id).show();\n\t\t\t\t// Note: `$input[0] != input` now!\n\t\t\t}\n\t\t\t$input.addClass('placeholder');\n\t\t\t$input[0].value = $input.attr('placeholder');\n\t\t} else {\n\t\t\t$input.removeClass('placeholder');\n\t\t}\n\t}\n\n\tfunction safeActiveElement() {\n\t\t// Avoid IE9 `document.activeElement` of death\n\t\t// https://github.com/mathiasbynens/jquery-placeholder/pull/99\n\t\ttry {\n\t\t\treturn document.activeElement;\n\t\t} catch (exception) {}\n\t}\n\n}(this, document, jQuery));\n\n},{}],\"/Users/wk/myspace/git/kvv/amily_ms_web/src/scripts/lib/jvalidator/src/AsyncRequest.js\":[function(require,module,exports){\nvar AsyncRequest = function(){\n    this.reqs = [];\n    this.status = 0;    //0-waithing,1-running\n}\n\nAsyncRequest.prototype.addRequest = function(func){\n    if(this.status!=0) return;\n    this.reqs.push(func);\n}\n\nAsyncRequest.prototype.go = function(){\n    if(this.status!=0) return;\n    \n    this.status = 1;    \n    var self = this;\n    var reqs = this.reqs;\n    var len = this.reqs.length;\n    \n    for(var i=0;i<reqs.length;i++){\n        var req = reqs[i];\n\n        if(this.status==0) return;\n        req(function(){\n            //async_continue\n            len--;\n            if(len==0){\n                self.finish();\n            } \n        });\n        \n    }\n}\n\nAsyncRequest.prototype.finish = function(){\n    this.status = 0;\n    if(this.onfinished){\n        this.onfinished();\n    }\n}\n\nAsyncRequest.prototype.clear = function(){\n    if(this.status!=0) return;\n    this.reqs = [];\n}\n\nmodule.exports = AsyncRequest;\n},{}],\"/Users/wk/myspace/git/kvv/amily_ms_web/src/scripts/lib/jvalidator/src/RuleParser.js\":[function(require,module,exports){\nvar PARSER = {};\n\nfunction _tokenized( str ) {\n    var s = [];\n    for( var i = 0; i < str.length; i++ ) {\n        var chr = str.charAt(i);\n        switch( chr ) {\n            case '(':\n            case ')':\n            case '!':\n            case '&':\n            case '|':\n                s.push(chr);\n                s.push('');\n                break;\n            default:\n                s.length ? s[s.length-1] += chr : s.push(chr);\n                break;\n        }\n    }\n    return s;\n}\n\nvar regName = /^(@?[\\w\\-]+)(\\[.+\\])?$/;\n\nfunction _parse( tokens ) {\n    var ast = [];\n    var o = null;\n    var token; \n    while( (token = tokens.shift() ) !== void 0 ) {\n        if( !token ) {\n            continue;\n        }\n        switch( token ) {\n            case '(':\n            case ')':\n            case '!':\n            case '&':\n            case '|':\n                ast.push(token);\n                break;\n            default: \n                var a = token.match( regName );\n                if( !a ) continue;\n                if( a[1].charAt(0) == '@' ) {\n                    o = { name : '@' , elemName : a[1].replace('@','') };\n                } else {\n                    o = { name : a[1] };\n                }\n                if( !PARSER[o.name] ) {\n                    throw \"not found parser's name : \" + o.name;\n                }\n                if( a[2] ) o.value = a[2].replace('[','').replace(']','');\n                ast.push( o );\n                o = null;\n                break;\n        }\n    }\n    return ast;\n}\n\n// 增加解析器\n// *name* 解析器名称\n// *options.argument* 带有参数，默认没有\nexports.add = function( name , options ) {\n    PARSER[name] = options || {};\n    PARSER[name].name = name;\n}\n\nexports.parse = function( str ) {\n    var tokens = _tokenized( str );\n    var ast = _parse( tokens );\n    return ast;\n}\n},{}],\"/Users/wk/myspace/git/kvv/amily_ms_web/src/scripts/lib/jvalidator/src/Validator.js\":[function(require,module,exports){\nvar Async = require('./AsyncRequest.js');\nvar parser = require('./RuleParser.js');\n\nvar PATTERNS = {}\nvar CONSTANT = {\n    PATTERN : \"jvalidator-pattern\" , \n    PLACEHOLDER : \"jvalidator-placeholder\" , \n    CNAME : \"jvalidator-cname\" , \n    MESSAGE_ATTR : \"__jvalidator_messages__\" , \n    FIELD_EVENTS : \"__jvalidator_events__\" , \n    DEBUG : \"jvalidator-debug\"\n}\n\n// ## 字段检查器\n// 绑定到某个字段后，对其进行检查等操作\nfunction FieldChecker( element ) {\n    this.element = element;\n    this.$element = $(element);\n    this.$form = this.$element.closest('form');\n    this.async = new Async();\n}\n\nFieldChecker.prototype = {\n\n    _getPatternMessage : function( results ) {  \n        var rstr = [];\n        for( var i = 0; i < results.length; i++ ) {\n            var p = results[i];\n            if( p.name ) {\n                rstr.push( p.getMessage() );\n            } else {\n                switch( p ) {\n                    case '&&':\n                        rstr.push(' 并且 ');\n                        break;\n                    case '||':\n                        rstr.push(' 或者 ');\n                        break;\n                    case '!':\n                        rstr.push('不');\n                        break;\n                }\n            }\n        }\n        return rstr.join('');\n    } ,\n\n    // 检查生成结果并返回错误信息\n    // return errors\n    _checkPatternResult : function( str , results ) {\n        var self = this;\n        var rstr = [];\n        for( var i = 0; i < results.length; i++ ) {\n            var p = results[i];\n            if( p.name ) {\n                rstr.push( p.result );\n            } else {\n                rstr.push( p );\n            }\n        }\n\n        if( this.$form.attr( \"data-\" + CONSTANT.DEBUG) ) {\n            console.info( this , this.element , str , rstr.join('') )\n        }\n\n        var all = eval( rstr.join('') );\n        if( all ) {\n            return [];\n        } else {\n            var arr = $.grep( results , function( e , idx ){\n                return e.name && e.result === false;\n            });\n            arr.getMessage = function(){\n                return self._getPatternMessage( results );\n            }\n            return arr;\n        }\n    },\n\n    // 验证自身的 pattern 是否合法以及是否满足所有项，以供开发自测使用\n    checkPattern : function(){\n        var $e = this.$element;\n        var rule_str = $e.attr( \"data-\" +  CONSTANT.PATTERN );\n        try {\n            var patterns = parser.parse( rule_str );\n        } catch(e) {\n            console.error( this.element , '验证器语法有错误，请检查' , rule_str );\n            console.error( '错误可能是：' , e );\n        }\n    } ,\n\n    // * done *\n    //  可以不传，即为触发检查 \n    //  `checkResult` boolean 检查结果 \n    //  `evt` 为触发的事件，可以没有\n    //  `errors` array 错误信息\n    check : function( $event , checkCallback ) {\n\n        var self = this;\n        var async = new Async();\n        var e = this.element;\n        var $e = this.$element;\n        var value = this.value();\n        var rule_str = $e.attr( \"data-\" +  CONSTANT.PATTERN );\n        var patterns = parser.parse( rule_str );\n\n        async.clear();\n        async.onfinished = function(){\n            var errors = self._checkPatternResult( rule_str , patterns );\n            \n            self.after_check( errors.length == 0 , errors , $event );\n            if ( checkCallback ) { checkCallback( errors.length == 0 , errors ); }\n        };\n\n        $.each( patterns , function(){\n            // 跳过所有计算变量\n            if( !this.name ) return;\n\n            // p 其中包括\n            // argument - 可能有\n            // message - 原始的message设置 \n            // validate - 验证规则 \n            // rule_str解析出来的内容 name(同patternName) , elemName(@才会有) , value(pattern的属性值)\n            // element - 对应的 element\n            // result - 验证后，会对该项设置 true 或 false\n            var p = $.extend( this , {\n                element : self.element ,\n                $element : self.$element , \n                $form : self.$form , \n                getMessage : function(){\n                    return self._getMessage.call( this , value );\n                } , \n                // 用来解析 parsedstr(它是带有@的内容) 的值，解析成功就返回那个 element ，否则返回 null\n                parseNameSymbol : function( parsedstr ){\n                    if( parsedstr.charAt(0) !== '@' ) return null;\n                    return this.$form.find( _parse_selector_syntax( parsedstr ) )[0];\n                } , \n\n                // 当 pattern 是 @xx[xx] 时， 则可以通过该方法取得 @ 对应的元素\n                getNameSymbol : function(){\n                    return this.parseNameSymbol( '@' + this.elemName );\n                },\n\n                // 当 pattern 是 xx[xx] 时， 则可以通过该方法取得括号中的值\n                // 如果值为 @xxx , 则返回该元素\n                // 否则返回值\n                getValueSymbol : function(){\n                    var el = this.parseNameSymbol( this.value );\n                    return el ? el : this.value;\n                } , \n\n                getElementValue : function( el ){\n                    el = $(el)[0]\n                    if( !el ) return \"\";\n                    var jv = _getFieldValidator( el )\n                    return jv ? jv.value() : self.value.call({\n                        element : el , \n                        $element : $(el) , \n                        $form : self.$form\n                    });\n                } , \n\n                // 得到元素的 cname 或 name\n                getElementName : function ( el ) {\n                    var $el = $(el);\n                    if( $el.attr( \"data-\" +  CONSTANT.CNAME ) ) {\n                        return $el.attr( \"data-\" +  CONSTANT.CNAME )\n                    } else {\n                        return $el.attr('name');    \n                    }\n                    return \"\";\n                }\n\n            } , PATTERNS[ this.name ] );\n\n            (function(p){ async.addRequest(function( async_continue ){\n                // isvalid - 是否验证成功\n                p.validate( value , function( is_valid ){\n                    p.result = is_valid;\n                    async_continue();\n                }, $event );\n\n            }); })(p);\n        })\n\n        async.go();\n\n    } , \n\n    // 根据 patternName 得到错误信息\n    // 优先级为：字段的message设置 > pg的message设置 > pattern的标准设置 \n    // * value * 为值，如果不传则重新获取\n    // * 由 p 进行调用\n    _getMessage : function( value ) {\n\n        var self = this;\n        var patternName = this.name;\n        var e = this.element;\n        var $e = this.$element;\n        var $f = this.$form;\n        var v = value || _getFieldValidator(e).value();\n        var msg_tmpl = $e.attr('data-jvalidator-message')\n                       || ( e[ CONSTANT.MESSAGE_ATTR ] ? e[ CONSTANT.MESSAGE_ATTR ][ patternName ] : null )\n                       || ( $f[0][ CONSTANT.MESSAGE_ATTR ] ? $f[0][ CONSTANT.MESSAGE_ATTR ][ patternName ] : null )\n                       || ( PATTERNS[ patternName ].message );\n\n        msg_tmpl = msg_tmpl.replace( /%val\\b/g , v ) \n        msg_tmpl = msg_tmpl.replace( /%name\\b/g , e.name )\n        msg_tmpl = msg_tmpl.replace( /%cname\\b/g , $e.attr( \"data-\" +  CONSTANT.CNAME) ) \n        msg_tmpl = msg_tmpl.replace( /=%argu\\b/g , function(){\n                            var v = self.parseNameSymbol( self.value );\n                            return v && v.tagName ? self.getElementValue( v ) : self.value;\n                       })\n        msg_tmpl = msg_tmpl.replace( /%argu\\b/g , function(){\n                            var v = self.parseNameSymbol( self.value );\n                            return v && v.tagName ? self.getElementName( v ) : self.value;\n                       })\n        msg_tmpl = msg_tmpl.replace( /@@/g , function( $0 , $1 ){\n                            var el = $f.find( _parse_selector_syntax(\"@\" + self.elemName) )[0]\n                            if( !el ) {\n                                return \"\";\n                            } else {\n                                var $el = $(el);\n                                if( $el.attr( \"data-\" +  CONSTANT.CNAME ) ) {\n                                    return $el.attr( \"data-\" +  CONSTANT.CNAME )\n                                } else {\n                                    return $el.attr('name');    \n                                }\n                            }\n                       })\n        msg_tmpl = msg_tmpl.replace( /=@([^\\s]*)\\b/g , function( $0 , $1 ){\n                            return self.getElementValue( $f.find('[name=' + $1 + ']') )\n                       })\n        msg_tmpl = msg_tmpl.replace( /@([^\\s]*)\\b/g , function( $0 , $1 ){\n                            return self.getElementName( $f.find('[name=' + $1 + ']') ) || \"\" ;\n                       })\n        return msg_tmpl;\n\n    },\n\n    // 根据不同的字段类型，取得 element 的值\n    value : function() {\n        var e = this.element , $e = this.$element , $form = this.$form , placeholdertext ;\n        switch( e.tagName.toLowerCase() ) {\n            case 'input':\n                switch( e.type ) {\n                    case 'radio':\n                        return $form.find('input[name=' + e.name + ']:radio:checked').val()\n                    case 'checkbox':\n                        return $form.find('input[name=' + e.name + ']:checkbox:checked').map(function(){\n                            return this.value;\n                        }).toArray().join(',');\n                    case 'text':\n                        placeholdertext = $e.attr( \"data-\" +  CONSTANT.PLACEHOLDER );\n                        return placeholdertext === e.value ? \"\" : e.value;\n                    case 'hidden':\n                    case 'password':\n                        return e.value;\n                }\n                break;\n            case 'select':\n                return e.value;\n            case 'textarea':\n                placeholdertext = $e.attr( \"data-\" +  CONSTANT.PLACEHOLDER );\n                return placeholdertext === e.value ? \"\" : e.value;\n            default:\n                var r;\n                r = $e.attr('data-value');\n                if( typeof r != 'undefined' ) return r;\n                r = e.value;\n                if( typeof r != 'undefined' ) return r;\n                return r;\n        }\n    } , \n\n    // 触发自验证行为\n    after_check : function( is_valid , errors , $event ) {\n        var type = is_valid ? 'success' : 'fail';\n        var evt = this.$element.data( CONSTANT.FIELD_EVENTS + type );\n        if( !evt ) evt = this.$form.data( CONSTANT.FIELD_EVENTS + type );\n        if( !evt || typeof evt != 'function') return;\n\n        evt.call( this , $event , errors );\n    }\n\n};\n\n\n// ## 表单验证器\n\nfunction FormValidator( form ) {\n    if( !form ) throw \"[ERROR] form 参数必须存在.\"\n    if( form.tagName !== 'FORM' ) throw \"[ERROR] 参数 form 必须是个表单元素.\"\n    this.form = form;\n    this.$form = $(form);\n    this.async = new Async();\n}\n\n// 判断元素可见并存在\nfunction _exists( el ){\n    return $(el).closest('body').size() > 0 && $(el).is(\":visible\");\n}\n\n// 得到指定元素的jvalidator\nfunction _getFieldValidator( el ){\n    if( el.nodeName == \"INPUT\" && ( el.type == \"checkbox\" || el.type == \"radio\" ) ) {\n        el = $(el).closest(\"form\").find(\"input[data-\" + CONSTANT.PATTERN + \"][name=\" + el.name + \"]\")[0];\n    }\n    if( !el || el.disabled ) return;\n    if( !$(el).attr( \"data-\" +  CONSTANT.PATTERN ) ) return;\n    return el._field_validator ? el._field_validator : ( el._field_validator = new FieldChecker( el ) );\n}\n\n// 解析 when 中的支持 @name 的 selector 语法 \nfunction _parse_selector_syntax( selector ) {\n    return ( selector || \"\" ).replace(/@([a-z][a-z0-9]*)\\b/ig,'[name=$1]');\n}\n\nFormValidator.prototype = {\n\n    // 得到所有需要验证的字段（非隐藏且不为disabled）\n    _getAllFieldValidator : function() {\n        var self = this;\n        return this.$form.find('[data-' + CONSTANT.PATTERN + ']').filter(function(){\n            return _exists(this) && !this.disabled;\n        }).map(function(){\n            return _getFieldValidator(this);\n        }).toArray();\n    } ,\n\n    // 验证本表单中所有元素的 pattern 是否正确\n    checkAllPatterns : function(){\n        var _jvs = this._getAllFieldValidator();\n        $.each( _jvs , function(){\n            this.checkPattern();\n        });\n    } ,\n\n    // 验证表单内所有字段\n    validateAll : function( validateAllCallback ){\n        var $form = this.$form;\n        var async = new Async();\n        var _jvs = this._getAllFieldValidator();\n        var errors = [];\n\n        async.clear();\n        async.onfinished = function(){\n            validateAllCallback && validateAllCallback( errors.length == 0 , errors ); \n        }\n\n        // 当没有任何可以验证的字段时直接返回\n        if( !_jvs.length ) {\n            return validateAllCallback( true , [] );\n        }\n\n        for( var i = 0; i < _jvs.length; i++ ) {\n            var jv = _jvs[i];\n            \n            (function(jv){\n                async.addRequest(function(async_continue){\n                    jv.check( null , function( checkResult , error ){\n                        if( !checkResult ){ errors.push( error ) }\n                        async_continue();\n                    });\n                });\n            })(jv);\n\n        }\n\n        async.go();\n    } , \n\n    // 当你需要字段自触发验证时，比如：input blur时需要验证，请使用该方法.\n    // selector 是需要自触发验证的字段 - 如果不写则默认全部。<br />\n    // evts 有两种写法:\n    // ##### 第一种：\n    // > [ 'blur' , 'focus' , 'keypress' ] \n    // \n    // 代表 selector 的 [ 'blur' , 'focus' , 'keypress' ] 事件会触发 selector 的验证\n    // \n    // ##### 第二种：\n    // > \\{ <br />\n    // >     '@sel' : [ 'blur' , 'keypress' ]\n    // > \\} <br />\n    // \n    // 代表 由@sel 的 [ 'blur' , 'keypress' ] 事件会触发 selector 的验证\n\n    when : function( selector , evts ) {\n        if( typeof selector != 'string' ) {\n            evts = selector;\n            selector = \"\";\n        }\n\n        var events = {};\n        var sel = selector || \"[data-\" + CONSTANT.PATTERN + \"]\";\n\n        // 处理 checkbox 和 radio\n        var chks = this.$form.find(sel).filter('input:checkbox');\n        if( chks.length ) {\n            chks.each(function(){\n                sel += \",\" + _parse_selector_syntax( \"@\" + this.name )\n            });\n        }\n\n        var rdos = this.$form.find(sel).filter('input:radio');\n        if( rdos.length ) {\n            rdos.each(function(){\n                sel += \",\" + _parse_selector_syntax( \"@\" + this.name )\n            });\n        }\n\n        if( $.isArray(evts) ) {  \n            events[ sel ] = evts ;\n        } else if( $.isPlainObject(evts) ) {\n            $.extend( events , evts );\n        }\n\n        for( var targetSelector in events ) {\n            var _sel = _parse_selector_syntax( targetSelector );\n            var _evts = ( events[targetSelector] || [] );\n            if( !_evts.length ) continue;\n            _evts = _evts.join(' ');\n\n            this.$form.undelegate( _sel , _evts );\n\n            this.$form.delegate( _sel , _evts , function($event){\n                var jv = _getFieldValidator( this );\n                jv && jv.check( $event );\n            })\n        }\n\n    },\n\n    setMessage : function( selector , patternName , msg ) { \n\n        if( arguments.length == 2 ) {\n            msg = patternName;\n            patternName = selector;\n            selector = null;\n        }\n\n        var c , f = this.$form[0];\n\n        if( !selector ) {\n            c = f[ CONSTANT.MESSAGE_ATTR ] = f[ CONSTANT.MESSAGE_ATTR ] || {};\n            c[patternName] = msg;\n        } else {\n            this.$form.find( _parse_selector_syntax( selector ) ).each(function(){\n                var e = this;\n                c = e[ CONSTANT.MESSAGE_ATTR ] = e[ CONSTANT.MESSAGE_ATTR ] || {};\n                c[patternName] = msg;\n            });\n        }\n\n    } ,\n\n    success : function( selector , fn ) {\n        this._bind_field_event( 'success' , selector , fn );\n    } ,\n\n    fail : function( selector , fn ) {\n        this._bind_field_event( 'fail' , selector , fn );\n    } ,\n\n    _bind_field_event : function( type , selector , fn ) {\n        \n        if( !type ) return;\n\n        if( typeof selector == 'function' ) {\n            fn = selector;\n            selector = null;\n        }\n\n        if( selector ) {\n            var sel = _parse_selector_syntax( selector );\n            this.$form.find(sel).each(function(){\n                $(this).data( CONSTANT.FIELD_EVENTS + type , fn );\n            })\n        } else {\n            this.$form.data( CONSTANT.FIELD_EVENTS + type , fn );\n        }\n\n    }\n\n}\n\n$.fn.jvalidator = function(){\n    var form = $(this).first();\n    if( form.data('FormValidator') ) return form.data('FormValidator');\n    var fv = new FormValidator( form[0] );\n    form.data('FormValidator', fv );\n    return fv;\n};\n\n\n// 设置增加自定义 pattern 的入口\n\nfunction addPattern( name , options ) {\n\n    if(!name) throw \"[ERROR] add pattern - no name\";\n    if(!options) throw \"[ERROR] add pattern - no options\"\n    if(!options.message) throw \"[ERROR] add pattern - no message\"\n    if(!options.validate) throw \"[ERROR] add pattern - no validate\";\n    \n    PATTERNS[name] = $.extend({\n        name : name \n    } , options );\n\n    parser.add( name , options );\n\n}\n\nexports.addPattern = addPattern;\n\n$.extend({\n    jvalidator: {\n        addPattern : addPattern ,\n        PATTERNS : PATTERNS , \n        getFieldValidator : function( el ) {\n            return _getFieldValidator( el );\n        }\n    }\n});\n\n},{\"./AsyncRequest.js\":\"/Users/wk/myspace/git/kvv/amily_ms_web/src/scripts/lib/jvalidator/src/AsyncRequest.js\",\"./RuleParser.js\":\"/Users/wk/myspace/git/kvv/amily_ms_web/src/scripts/lib/jvalidator/src/RuleParser.js\"}],\"/Users/wk/myspace/git/kvv/amily_ms_web/src/scripts/lib/jvalidator/src/index.js\":[function(require,module,exports){\nvar v = require('./Validator.js');\n\nvar validFunc = {\n    \n    /***\n     * 值:\n     * 1 无错误 \n     * -1 长度错误\n     * -2 验证错误 \n     */\n    ID : function( num ) {  \n\n        num = num.toUpperCase();  \n        \n        //身份证号码为15位或者18位，15位时全为数字，18位前17位为数字，最后一位是校验位，可能为数字或字符X。   \n        if (!(/(^\\d{15}$)|(^\\d{17}(\\d|X)$)/.test(num))) { \n            return -1; \n        }\n        \n        //校验位按照ISO 7064:1983.MOD 11-2的规定生成，X可以认为是数字10。 \n        //下面分别分析出生日期和校验位 \n        \n        var len, re; \n        len = num.length; \n        if (len == 15) {\n            \n            re = new RegExp(/^(\\d{6})(\\d{2})(\\d{2})(\\d{2})(\\d{3})$/); \n            var arrSplit = num.match(re); \n\n            //检查生日日期是否正确 \n            var dtmBirth = new Date('19' + arrSplit[2] + '/' + arrSplit[3] + '/' + arrSplit[4]); \n            var bGoodDay = (dtmBirth.getYear() == Number(arrSplit[2])) && ((dtmBirth.getMonth() + 1) == Number(arrSplit[3])) && (dtmBirth.getDate() == Number(arrSplit[4])); \n            \n            if (!bGoodDay) { \n                return -2; \n            } else {                \n                return 1;\n            }   \n        }\n        \n        if (len == 18) {\n            \n            re = new RegExp(/^(\\d{6})(\\d{4})(\\d{2})(\\d{2})(\\d{3})(\\d|X)$/); \n            var arrSplit = num.match(re); \n\n            //检查生日日期是否正确 \n            var dtmBirth = new Date(arrSplit[2] + \"/\" + arrSplit[3] + \"/\" + arrSplit[4]); \n            var bGoodDay = (dtmBirth.getFullYear() == Number(arrSplit[2])) && ((dtmBirth.getMonth() + 1) == Number(arrSplit[3])) && (dtmBirth.getDate() == Number(arrSplit[4])); \n\n            if (!bGoodDay) { \n                return -2; \n            } else { \n                //检验18位身份证的校验码是否正确。 \n                //校验位按照ISO 7064:1983.MOD 11-2的规定生成，X可以认为是数字10。 \n                var valnum; \n                var arrInt = new Array(7, 9, 10, 5, 8, 4, 2, 1, 6, 3, 7, 9, 10, 5, 8, 4, 2); \n                var arrCh = new Array('1', '0', 'X', '9', '8', '7', '6', '5', '4', '3', '2'); \n                var nTemp = 0, i; \n                for(i = 0; i < 17; i ++) { \n                    nTemp += num.substr(i, 1) * arrInt[i]; \n                } \n                \n                valnum = arrCh[nTemp % 11];\n                \n                if (valnum != num.substr(17, 1)) { \n                    return -2; \n                } \n                \n                return 1; \n            } \n        }\n        \n        return -2; \n        \n    }\n    \n};\n\nv.addPattern('required',{\n    message : '不能为空' , \n    validate : function( value , done ) {\n        done( value !== \"\" ); \n    }\n});\n\nv.addPattern('non-required',{\n    message : '允许为空' , \n    validate : function( value , done ) {\n        done( value === \"\" ); \n    }\n});\n\nv.addPattern('numeric',{\n    message : '必须是数字' , \n    validate : function( value , done ) {\n        done( /^\\d+$/.test( value ) );\n    }\n});\n\n\nv.addPattern('int',{\n    message : '必须是整数' , \n    validate : function( value , done ) {\n        done( /^\\-?\\d+$/.test( value ) );\n    }\n});\n\nv.addPattern('decimal',{\n    message : '必须是小数' , \n    validate : function( value , done ) {\n        done( /^\\-?\\d*\\.?\\d+$/.test( value ) );\n    }\n});\n\n\nv.addPattern('alpha',{\n    message : '必须是字母' , \n    validate : function( value , done ) {\n        done( /^[a-z]+$/i.test( value ) );\n    }\n});\n\nv.addPattern('alpha_numeric',{\n    message : '必须为字母或数字' , \n    validate : function( value , done ) {\n        done( /^[a-z0-9]+$/i.test( value ) );\n    }\n});\n\nv.addPattern('alpha_dash',{\n    message : '必须为字母或数字及下划线等特殊字符' , \n    validate : function( value , done ) {\n        done( /^[a-z0-9_\\-]+$/i.test( value ) );\n    }\n});\n\nv.addPattern('chs',{\n    message : '必须是中文字符',\n    validate : function( value , done ) {\n        done( /^[\\\\u4E00-\\\\u9FFF]+$/i.test( value ) );\n    }\n});\n\nv.addPattern('chs_numeric',{\n    message : '必须是中文字符或数字',\n    validate : function( value , done ) {\n        done( /^[\\\\u4E00-\\\\u9FFF0-9]+$/i.test( value ) );\n    }\n});\n\nv.addPattern('chs_numeric',{\n    message : '必须是中文字符或数字及下划线等特殊字符' , \n    validate : function( value , done ) {\n        done( /^[\\\\u4E00-\\\\u9FFF0-9_\\-]+$/i.test( value ) );\n    }\n});\n\n\nv.addPattern('match',{\n    argument : true , \n    message : '必须与 %argu 相同' , \n    validate : function( value , done ) {\n        var v = this.getValueSymbol();\n        var vv = v && v.tagName ? this.getElementValue(v) : v;\n        done( vv === value );\n    }\n});\n\nv.addPattern('contain',{\n    argument : true , \n    message : '必须包含\"%argu\"的内容' , \n    validate : function( value , done ) {\n        var v = this.getValueSymbol();\n        var vv = v && v.tagName ? this.getElementValue(v) : v;\n        done( !!~value.indexOf(vv) );\n    }\n});\n\n\nv.addPattern('@',{\n    argument : true , \n    message : '@@必须为 %argu' , \n    validate : function( value , done ) {\n        var v = this.getValueSymbol();\n        var at = this.getNameSymbol();\n        if( v === null || at === null ) {\n            done( false );\n        } else {\n            var vv = v && v.tagName ? this.getElementValue(v) : v;\n            var vat = at && at.tagName ? this.getElementValue(at) : at;\n            done( vv === vat );\n        }\n        \n    }\n});\n\n\nv.addPattern('idcard',{\n    message : '身份证格式错误' , \n    validate : function( value , done ) {\n        done( validFunc.ID(value) === 1 ); \n    }\n});\n\n\nv.addPattern('passport',{\n    message : '护照格式错误或过长',\n    validate : function( value , done ) {\n        done( /^[a-zA-Z0-9]{0,20}$/i.test( value ) ); \n    }\n});\n\nv.addPattern('email',{\n    message : '邮件地址错误',\n    validate : function( value , done ) {\n        done( /^[a-zA-Z0-9.!#$%&amp;'*+\\-\\/=?\\^_`{|}~\\-]+@[a-zA-Z0-9\\-]+(?:\\.[a-zA-Z0-9\\-]+)*$/.test( value ) );\n    }\n});\n\nv.addPattern('min_length',{\n    argument : true , \n    message : '最少输入%argu个字', \n    validate : function( value , done ) {\n        var n = parseInt( this.value , 10 );\n        done( value.length >= n );\n    }\n});\n\nv.addPattern('max_length',{\n    argument : true , \n    message : '最多输入%argu个字', \n    validate : function( value , done ) {\n        var n = parseInt( this.value , 10 );\n        done( value.length <= n );\n    }\n});\n\n\nv.addPattern('length',{\n    argument : true , \n    message : '长度必须为%argu个字符', \n    validate : function( value , done ) {\n        var n = parseInt( this.value , 10 );\n        done( value.length === n );\n    }\n});\n\n\nv.addPattern('greater_than',{\n    argument : true , \n    message : '必须大于%argu',\n    validate : function( value , done ){\n        var v = parseInt( value , 10 );\n        var n = this.parseNameSymbol( this.value );\n        n = parseFloat( n && n.tagName ? this.getElementValue( n ) : this.value );\n        done( v > n )\n    }\n});\n\nv.addPattern('less_than',{\n    argument : true , \n    message : '必须小于%argu',\n    validate : function( value , done ){\n        var v = parseInt( value , 10 );\n        var n = this.parseNameSymbol( this.value );\n        n = parseFloat( n && n.tagName ? this.getElementValue( n ) : this.value );\n        done( v < n )\n    }\n});\n\nv.addPattern('equal',{\n    argument : true , \n    message : '必须等于%argu',\n    validate : function( value , done ){\n        var v = parseInt( value , 10 );\n        var n = this.parseNameSymbol( this.value );\n        n = parseFloat( n && n.tagName ? this.getElementValue( n ) : this.value );\n        done( v == n )\n    }\n});\n\nv.addPattern('ip',{ \n    message : '必须符合ip格式',\n    validate : function( value , done ){\n        done( /^((25[0-5]|2[0-4]\\d|1\\d{2}|\\d{1,2})\\.){3}(25[0-5]|2[0-4]\\d|1\\d{2}|\\d{1,2})$/i.test(value) );\n    }\n});\n\nv.addPattern('date',{\n    message : '必须符合日期格式 YYYY-MM-DD',\n    validate : function( value , done ) {\n        done( /^\\d\\d\\d\\d\\-\\d\\d\\-\\d\\d$/.test(value) );\n    }\n});\n \n\n},{\"./Validator.js\":\"/Users/wk/myspace/git/kvv/amily_ms_web/src/scripts/lib/jvalidator/src/Validator.js\"}],\"/Users/wk/myspace/git/kvv/amily_ms_web/src/scripts/lib/search_params.js\":[function(require,module,exports){\nvar search  = window.location.search,\n    decode = decodeURIComponent;\nvar S= {}; \n    function parse(is_now){\n        var _s , params = {} ;\n        if (!is_now) {\n            _s = search;\n        } else {\n            _s = window.location.search;\n        } \n        _s =  _s.replace(/^\\?/,\"\").split(\"&\");\n        if (_s.forEach) {\n            _s.forEach(function(s,i){\n                var t = s.split(\"=\");\n                params[t[0]] = decode(t[1]);\n            });\n        } else {\n            for (var i = 0, l = _s.length; i < l; i++) {\n                var t = _s[i].split(\"=\");\n                params[t[0]] = decode(t[1]);\n            }\n        }\n        return params;\n    }\n    var params = parse();\n    var is_empty = function(){\n        var em = true;\n        for(var i in params){\n            if (params.hasOwnProperty(i)) {\n                em = false;\n                break;\n            }\n        };\n        return em;\n    }();\n    S.params = params;\n    S.is_empty = is_empty;\n    S.now = function(){\n        return parse(true);\n    }\n\nmodule.exports = S;\n\n},{}],\"/Users/wk/myspace/git/kvv/amily_ms_web/src/scripts/lib/y-selector.js\":[function(require,module,exports){\n/**\n * @requires yselector.css\n * 位置:styles/common/yselector.css\n *\n * TODO 键盘导航 滚动条跟随滚动\n * TODO IPHONE 使用原生控件\n *\n * @param {Object} config\n * @param {Boolean} config.emptyHidden 当自定义select没有选项时是否隐藏 true隐藏\n * @param {Boolean} config.maxRows\n * @param {Boolean} config.index 初始化时指定选择第几个option 如果没指定 默认选择原生select元素当前选择的option\n * @param {String} config.direction option下拉框出现位置\n * top select title的上方  bottom select title的下方\n * @param {Function} config.onchange(obj) 选项更改时会触发此函数\n * @param {Object} obj\n *\n * @param {Function} config.onselect(text) 更换选项时会触发此函数\n * 此函数可以对当前选择的option text进行处理 自定义select title上显示的是处理后的text\n * @param {String} text 当前选择的option text\n *\n * @example\n * $(\"select\").yselector(config);\n *\n *\n * $($.fn.yselector.events).trigger(\"change\", [ self, obj, self.option(\"holder\")]);\n */\n\n(function($){\n\n    var SELECTOR_DATA_KEY = \"YSELECTOR\",\n        SELECTOR_EVENT    =  \".SELECTOR_EVENT\",\n        HOVER             = \"hover\";\n\n    var Selector = function(){};\n\n    Selector.options = {\n        emptyHidden: false,\n        maxRows    : 10,\n        index      : null,\n        // direction  : \"bottom\",\n        onchange   : function() {},\n        onselect   : function(t) { return t || \"\"; }\n    };\n\n    Selector.prototype = {\n        _init: function(config){\n            var self = this;\n\n            self._setOptions(config || {});\n            self._bindEvents();\n        },\n        _bindEvents: function(){\n            var self    = this,\n                jquery  = self.option(\"jquery\"),\n                showing = false;\n\n            function toggleEvent(e){\n\n                if (self.option(\"disable\")) {\n                    return;\n                }\n\n                if (showing) {\n                    self._hide();\n                } else {\n                    self._show();\n                }\n\n                showing = !showing;\n            }\n\n            // fix capture not release(mousedown and drag out);\n            var _cur = null;\n            $(document).mouseup(function() {\n               _cur && _cur.releaseCapture && _cur.releaseCapture();\n            });\n\n            jquery.delegate(\".ysel-input\", \"click\" + SELECTOR_EVENT, toggleEvent)\n                .delegate(\".ysel-arraw\", \"mousedown\" + SELECTOR_EVENT, function(e){\n                    self.option(\"input\").focus();\n                    e.preventDefault();\n                    if (this.setCapture) { this.setCapture(); }\n                    toggleEvent(e);\n                })\n                .delegate(\".ysel-arraw\", \"click\" + SELECTOR_EVENT, function(e){\n                    if (this.releaseCapture) { this.releaseCapture(); }\n                })\n                .delegate(\".ysel-input\", \"focusout\" + SELECTOR_EVENT, function(){\n                    if (showing) {\n                        self._hide();\n                        showing = false;\n                    }\n\n                    var val = self.val(),\n                        obj = self._getByValue(val);\n\n                    // for exteral bind\n                    $($.fn.yselector.events).trigger(\"blur\", [ self, obj, self.option(\"holder\")]);\n                })\n                .delegate(\".ysel-sug ul\", \"mousedown\" + SELECTOR_EVENT, function(e){\n                    e.preventDefault();\n\n                    if (this.setCapture) {\n                        this.setCapture();\n                        _cur = this; // fix capture not release(mousedown and drag out);\n                    }\n\n                    var target = e.target, index;\n\n                    if (target.tagName === \"A\") {\n                        index = $(target).data(\"index\");\n                    } else {\n                        var a = $(target).parentsUntil(\".ysel-sug\",\"a\");\n                        if(a.length == 0) { return; }\n                        index = a.data(\"index\");\n                    }\n\n                    self.index(index);\n\n                    toggleEvent(e);\n                })\n                .delegate(\".ysel-sug ul\", \"click\" + SELECTOR_EVENT, function(e){\n                    if (this.releaseCapture) { this.releaseCapture(); }\n                })\n                .delegate(\".ysel-sug ul\", \"mouseenter\" + SELECTOR_EVENT, function(e){\n                    self._cur().removeClass(HOVER);\n                })\n                .delegate(\".ysel-input\", \"keydown\" + SELECTOR_EVENT, function(e){\n\n                    if (self.option(\"disable\")) {\n                        return;\n                    }\n\n                    var code = e.keyCode;\n\n                    if(code === 37 || code === 38){\n                        self.previous();\n                        return false;\n                    } else if(code === 39 || code === 40){\n                        self.next();\n                        return false;\n                    } else if(code === 13){\n                        toggleEvent(e);\n                    } else if(code === 8){\n                        return false;\n                    }\n                });\n        },\n        _cur: function(i){\n            var self    = this,\n                current = (i == null) ? self.option(\"index\") : i,\n                cur     = self.option(\"suggest\").find(\"a:eq(\" + current + \")\");\n\n            return cur;\n        },\n        /**\n         * 创建自定义select组件\n         * 保存select组件,select组件下拉元素,select组件title\n         */\n        _drawHtml: function(){\n\n            var self = this;\n\n            var fullHTML = ['<div class=\"ui-yselector\">',\n                                '<div class=\"ysel-box\">',\n                                    '<div class=\"ysel-arraw\"><b></b></div>',\n                                    '<span class=\"ysel-input\" tabindex=\"0\"></span>',\n                                '</div>',\n                                '<div style=\"display:none;\" class=\"ysel-sug\">',\n                                    '<ul></ul>',\n                                '</div>',\n                            '</div>'];\n\n            var jquery = $(fullHTML.join(\"\\n\")),\n                holder = self.option(\"holder\").hide();\n\n            holder.after(jquery);\n            self.option(\"jquery\", jquery);\n            self.option(\"suggest\", $(\".ysel-sug\", jquery));\n            self.option(\"input\", $(\".ysel-input\", jquery));\n        },\n        _drawSuggest: function(){\n            var listHtmlArray = [], item,\n                self = this,\n                list = self.option(\"data\");\n\n            for (var i = 0, l = list.length; i < l; i++) {\n                item = list[i];\n                listHtmlArray.push('<li class=\"js-search-type\"><a data-value=\"' + item.value + '\" hidefocus=\"on\" data-index=\"' + i + '\"');\n                listHtmlArray.push(' onclick=\"return false;\" href=\"javascript:;\" tabindex=\"-1\">' + item.text );\n                listHtmlArray.push('</a></li>');\n            }\n\n            self.option(\"suggest\").html(\"<ul>\" + listHtmlArray.join(\"\\n\") + \"</ul>\");\n        },\n        _setOptions: function(obj){\n            var self = this;\n\n            self.options = $.extend({}, Selector.options, obj);\n\n            var rawSelect = obj.rawSelect,\n                options = rawSelect.options,\n                index = rawSelect.selectedIndex,\n                dataList = [], item;\n\n            for (var i = 0, l = options.length; i < l; i++) {\n                item = options[i];\n                dataList.push({\n                    value: item.value || item.text,\n                    text: item.text\n                });\n            }\n\n            self.option(\"holder\", $(rawSelect));\n            self.option(\"index\", obj.index != null ? obj.index : index);\n            self._drawHtml();\n            self.setOptions(dataList);\n\n        },\n        _getByValue: function(value, key){\n\n            if (!value) {\n                return;\n            }\n\n            var list = this.option(\"data\"),\n                item;\n\n            key = key || \"value\";\n\n            for (var i = 0, l = list.length; i < l; i++) {\n                item = list[i];\n\n                if (item[key] == value) {\n                    return item;\n                }\n            }\n        },\n        /**\n         * 根据obj 更新select组件选项\n         * @param {Object} obj\n         * @param {int} obj.index\n         * @param {String} obj.value\n         * @param {String} obj.text\n         * @param {Boolean} force\n         */\n        _setByObject: function(obj, force){\n\n            obj = obj || {};\n\n            if (!force && this.option(\"index\") === obj.index) {\n                return;\n            }\n\n            var self = this,\n                onselect = self.option(\"onselect\"),\n                onchange = self.option(\"onchange\");\n\n            var text = onselect ? onselect(obj.text) : (obj.text || \"\");\n\n            self.option(\"value\", obj.value || \"\");\n            self.option(\"text\", text);\n            self.option(\"index\", obj.index || 0);\n\n            var holder = self.option(\"holder\"),\n                input = self.option(\"input\");\n\n            if (holder) { holder[0].selectedIndex = obj.index; }\n            if (input) { self.option(\"input\").text(text); }\n\n            if (onchange) { onchange.call(self, obj); }\n\n            // for exteral bind\n            $($.fn.yselector.events).trigger(\"change\", [ self, obj, self.option(\"holder\")]);\n        },\n        _triggerClass: function(i, j){\n            var self = this;\n\n            if (i === j) {\n                return;\n            }\n\n            self._cur(i).removeClass(HOVER);\n            self._cur(j).addClass(HOVER);\n        },\n        _show: function(){\n            var self = this,\n                suggest = self.option(\"suggest\"),\n                index = self.option(\"index\"),\n                direction = self.option(\"direction\");\n\n            self._drawSuggest();\n\n            var list = suggest.find(\"a\");\n\n            list.eq(index).addClass(HOVER);\n\n            suggest.show();\n\n            var maxRows = self.option(\"maxRows\");\n            var height = Math.min(list.size(), maxRows) * list.height();\n            var prev = self.option(\"jquery\"), top;\n            switch(direction){\n                case \"top\":\n                    top = 0 - height - prev.height() - 2;\n                    break;\n                case \"bottom\":\n                    top = 5;\n                    break;\n                default: // 根据下方空间决定在bottom还是top展示\n                    var win =$(window),\n                        prevTop = prev.offset().top + prev.height() + 3,\n                        st = win.scrollTop(),\n                        wh = win.height();\n\n                    if(prevTop + height > st + wh){\n                        top = 0 - height - prev.height() - 2;\n                    } else {\n                        top = 5;\n                    }\n                    break;\n            }\n\n            suggest.find(\"ul\").css(\"height\", height).css(\"top\", top).scrollTop(self.option('index') * list.height());\n        },\n        _hide: function(){\n            this.option(\"suggest\").hide();\n        },\n        /**\n         * 清空原生select 并将list转换为Option添加到select中\n         * 并根据this.option(\"index\")的值 选择对应的option选项\n         * @param {Object} list select option数据对象\n         * @param {String} list.value\n         * @param {String} list.text\n         */\n        setOptions: function(list){\n            var self = this,\n                jquery = self.option(\"jquery\");\n\n            list = list || [];\n\n            var select = self.option(\"holder\")[0];\n            //清空原生select选项\n                select.length = 0;\n\n            for (var i = 0, l = list.length, temp; i < l; i++) {\n                temp = list[i];\n                temp.index = i;\n                select.options.add(new Option(temp.text, temp.value));\n            }\n\n            self.option(\"data\", list);\n\n            if (!list.length && self.option(\"emptyHidden\")) {\n                jquery.hide();\n            } else {\n                jquery.show();\n            }\n\n            self._setByObject(list[self.option(\"index\")] || list[0], true);\n        },\n        first: function(){\n            return this.option(\"data\")[0] || {};\n        },\n        /**\n         * 读取或更新配置参数(this.options)\n         * @param {String} key 配置参数key\n         * @param {Object} val 更新时 要设置的配置参数对应的值\n         */\n        option: function(key, val){\n\n            if (val != null) {\n                this.options[key] = val;\n            } else {\n                return this.options[key];\n            }\n        },\n        previous: function(){\n            var self = this,\n                index = self.index() - 1;\n\n            if(index < 0){\n                index = self.option(\"data\").length + index;\n            }\n\n            self.index(index);\n        },\n        next: function(){\n            var self = this;\n\n            self.index(self.option(\"index\") + 1);\n        },\n        index: function(i){\n            var self = this;\n\n            if (i == null) {\n                return self.option(\"index\");\n            }\n\n            var data = self.option(\"data\"),\n                obj = data[i],\n                index = self.option(\"index\");\n\n            if (!obj) {\n                obj = self.first();\n                i = 0;\n            }\n\n            self._setByObject(obj);\n        },\n        val: function(value, force){\n            var self = this;\n\n            if (value == null) {\n                return self.option(\"value\");\n            }\n\n            var obj = self._getByValue(value);\n\n            if (obj == null) {\n                obj = self.first();\n            }\n\n            self._setByObject(obj, force);\n\n        },\n        text: function(text){\n            var self = this;\n\n            if (text == null) {\n                return self.option(\"text\");\n            }\n\n            var obj = self._getByValue(text, \"text\");\n\n            if (obj == null) {\n                obj = self.first();\n            }\n\n            self._setByObject(obj);\n\n        },\n        disable: function(){\n            this.option(\"jquery\")\n                .addClass(\"disble\");\n\n            this.option(\"disable\", true);\n        },\n        enable: function(){\n            this.option(\"jquery\")\n                .removeClass(\"disble\");\n\n            this.option(\"disable\", false);\n        },\n        _redrawList: function() {\n\n            var rawSelect = this.option('holder')[0],\n                options = rawSelect.options,\n                dataList = [], item;\n\n            for (var i = 0, l = options.length; i < l; i++) {\n                item = options[i];\n                dataList.push({\n                    value: item.value || item.text,\n                    text: item.text\n                });\n            }\n            this.setOptions(dataList);\n        },\n        remove: function(index) {\n            var sel = this.option('holder')[0],\n                options = sel.options;\n            options.remove(index);\n            this._redrawList();\n        },\n        add: function(option) {\n            var sel = this.option('holder')[0],\n                options = sel.options;\n            options.add(option);\n            this._redrawList();\n        }\n    };\n    $.fn.extend({\n        yselector: function(config){\n\n            $.fn.yselector.events = {};\n\n            this.each(function(i, item){\n                var self = $(this);\n\n                var inst = self.data(SELECTOR_DATA_KEY);\n\n                if (!inst) {\n                    config = config || {};\n                    config.rawSelect = self[0];\n                    inst = new Selector();\n                    self.data(SELECTOR_DATA_KEY, inst);\n                    inst._init(config);\n                }\n\n                return inst;\n            });\n        }\n    });\n\n})(jQuery);\n\n\n\n},{}],\"/Users/wk/myspace/git/kvv/amily_ms_web/src/scripts/mod/http.js\":[function(require,module,exports){\nvar cookies = require('../lib/cookies');\nvar $ = window.jQuery;\nvar def_opt = {\n    cache : false,\n    dataType : \"json\"\n};\n\nvar ajax = function(opt){\n    opt = $.extend(def_opt , opt );\n    var data = opt.data || {};\n    data.csrftoken = cookies.getItem(\"csrftoken\");\n    opt.data = data;\n    return $.ajax(opt);\n}\n\nvar http = {\n    get : function(opt){\n        opt.type = \"get\";\n        return ajax(opt);\n    },\n    post : function(opt){\n        opt.type = \"post\";\n        return ajax(opt);\n    }\n};\n\nmodule.exports = http;\n\n},{\"../lib/cookies\":\"/Users/wk/myspace/git/kvv/amily_ms_web/src/scripts/lib/cookies.js\"}]},{},[\"./src/scripts/page/subject_add.js\"]);\n"],"sourceRoot":"/source/"}